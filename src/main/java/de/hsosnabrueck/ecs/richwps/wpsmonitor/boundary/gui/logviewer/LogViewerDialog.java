/*
 * Copyright 2014 Florian Vogelpohl <floriantobias@gmail.com>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.hsosnabrueck.ecs.richwps.wpsmonitor.boundary.gui.logviewer;

import de.hsosnabrueck.ecs.richwps.wpsmonitor.util.FileUtils;
import de.hsosnabrueck.ecs.richwps.wpsmonitor.boundary.gui.utils.MessageDialogs;
import java.awt.Font;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.nio.file.Path;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.LayoutStyle;
import javax.swing.WindowConstants;

/**
 *
 * @author Florian Vogelpohl <floriantobias@gmail.com>
 */
public class LogViewerDialog extends JDialog {

    private final Path logFileDirectory;

    public LogViewerDialog(final Frame parent, final Path logFileDirectory) {
        super(parent, true);

        this.logFileDirectory = logFileDirectory;

        initComponents();
        setLocationRelativeTo(parent);
    }

    public void prepare() {
        init();
        revalidate();
        repaint();
    }

    private void init() {
        try {
            Set<Path> fileSet = FileUtils.scanDirectoryForFiles(logFileDirectory);
            Path[] files = fileSet.toArray(new Path[]{});

            if (files.length > 0) {
                fileSelectorComboBox.setModel(new DefaultComboBoxModel(files));
                loadTextOfFileToTextArea(files[0]);
            }
        } catch (IllegalArgumentException | IOException ex) {
            MessageDialogs.showError(this, "Error", ex.toString());
        }
    }

    private void loadTextOfFileToTextArea(final Path file) throws IOException {
        logFileArea.setText(FileUtils.loadFile(file));
        revalidate();
    }

    private void loadSelection() {
        try {
            Path selectedFile = (Path) fileSelectorComboBox.getSelectedItem();
            loadTextOfFileToTextArea(selectedFile);
        } catch (IOException ex) {
            MessageDialogs.showError(this, "Error", "Can't open the selected file.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanel jPanel1 = new JPanel();
        JScrollPane jScrollPane1 = new JScrollPane();
        logFileArea = new JTextArea();
        fileSelectorComboBox = new JComboBox();
        refreshButton = new JButton();
        closeButton = new JButton();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Log file Viewer");
        setIconImage(new ImageIcon(getClass().getResource("/icons/logs.png")).getImage());

        jPanel1.setBorder(BorderFactory.createTitledBorder("Log File"));

        logFileArea.setEditable(false);
        logFileArea.setColumns(20);
        logFileArea.setFont(new Font("Monospaced", 0, 10)); // NOI18N
        logFileArea.setRows(5);
        jScrollPane1.setViewportView(logFileArea);

        fileSelectorComboBox.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                fileSelectorComboBoxActionPerformed(evt);
            }
        });

        refreshButton.setIcon(new ImageIcon(getClass().getResource("/icons/refresh.png"))); // NOI18N
        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        closeButton.setIcon(new ImageIcon(getClass().getResource("/icons/apply.png"))); // NOI18N
        closeButton.setText("Close");
        closeButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(fileSelectorComboBox, 0, 618, Short.MAX_VALUE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refreshButton)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeButton)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 501, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(fileSelectorComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshButton)
                    .addComponent(closeButton)))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileSelectorComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_fileSelectorComboBoxActionPerformed
        loadSelection();
    }//GEN-LAST:event_fileSelectorComboBoxActionPerformed

    private void refreshButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        loadSelection();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void closeButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton closeButton;
    private JComboBox fileSelectorComboBox;
    private JTextArea logFileArea;
    private JButton refreshButton;
    // End of variables declaration//GEN-END:variables
}
